package main

//当代码都放在${GOPATH} 目录下
// 我们导入到的路径要从${GOPATH}/src后面继续写起


import "fmt" 
import "1package/add"
/*
import add1 "1package/add"
当不同包中函数 名变量 重复冲突 时 可以给包起 别名 
*/

/*
    匿名导入包 （只希望导入包， 而不使用包内部的数据， 可以使用匿名导入包）
    import _ "包路径"
*/



/*
    init（）初始化函数
    在go语言程序执行时导入包语句会自动触发init（）函数的调用， 需要注意的是
    init（） 函数没有参数也没有返回值， init（）函数在程序运行时自动被调用执
    行， 不能在代码中主动调用他


    若 导入的包中还包含了其他的包， 编译器会由此构建出一个树状的包引用关系， 再根据引用顺序决定编译顺序， 依次编译这些包
    从“叶子节点到根的顺序”

    运行时 最后被导入的包 会最先初始化并调用其 init（）函数 
*/


func main() {
    ans := add.Add(1, 22)
    fmt.Println(ans)

}
